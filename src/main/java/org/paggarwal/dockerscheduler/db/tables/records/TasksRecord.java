/**
 * This class is generated by jOOQ
 */
package org.paggarwal.dockerscheduler.db.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;
import org.paggarwal.dockerscheduler.db.tables.Tasks;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TasksRecord extends UpdatableRecordImpl<TasksRecord> implements Record9<Integer, String, Timestamp, String, String, Integer, Integer, Integer, String> {

	private static final long serialVersionUID = 1155590545;

	/**
	 * Setter for <code>dockerscheduler.TASKS.id</code>.
	 */
	public void setId(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>dockerscheduler.TASKS.id</code>.
	 */
	public Integer getId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>dockerscheduler.TASKS.name</code>.
	 */
	public void setName(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>dockerscheduler.TASKS.name</code>.
	 */
	public String getName() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>dockerscheduler.TASKS.created_on</code>.
	 */
	public void setCreatedOn(Timestamp value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>dockerscheduler.TASKS.created_on</code>.
	 */
	public Timestamp getCreatedOn() {
		return (Timestamp) getValue(2);
	}

	/**
	 * Setter for <code>dockerscheduler.TASKS.image</code>.
	 */
	public void setImage(String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>dockerscheduler.TASKS.image</code>.
	 */
	public String getImage() {
		return (String) getValue(3);
	}

	/**
	 * Setter for <code>dockerscheduler.TASKS.command</code>.
	 */
	public void setCommand(String value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>dockerscheduler.TASKS.command</code>.
	 */
	public String getCommand() {
		return (String) getValue(4);
	}

	/**
	 * Setter for <code>dockerscheduler.TASKS.type</code>.
	 */
	public void setType(Integer value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>dockerscheduler.TASKS.type</code>.
	 */
	public Integer getType() {
		return (Integer) getValue(5);
	}

	/**
	 * Setter for <code>dockerscheduler.TASKS.success</code>.
	 */
	public void setSuccess(Integer value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>dockerscheduler.TASKS.success</code>.
	 */
	public Integer getSuccess() {
		return (Integer) getValue(6);
	}

	/**
	 * Setter for <code>dockerscheduler.TASKS.failed</code>.
	 */
	public void setFailed(Integer value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>dockerscheduler.TASKS.failed</code>.
	 */
	public Integer getFailed() {
		return (Integer) getValue(7);
	}

	/**
	 * Setter for <code>dockerscheduler.TASKS.cron</code>.
	 */
	public void setCron(String value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>dockerscheduler.TASKS.cron</code>.
	 */
	public String getCron() {
		return (String) getValue(8);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record9 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row9<Integer, String, Timestamp, String, String, Integer, Integer, Integer, String> fieldsRow() {
		return (Row9) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row9<Integer, String, Timestamp, String, String, Integer, Integer, Integer, String> valuesRow() {
		return (Row9) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return Tasks.TASKS.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return Tasks.TASKS.NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field3() {
		return Tasks.TASKS.CREATED_ON;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return Tasks.TASKS.IMAGE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field5() {
		return Tasks.TASKS.COMMAND;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field6() {
		return Tasks.TASKS.TYPE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field7() {
		return Tasks.TASKS.SUCCESS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field8() {
		return Tasks.TASKS.FAILED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field9() {
		return Tasks.TASKS.CRON;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value3() {
		return getCreatedOn();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getImage();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value5() {
		return getCommand();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value6() {
		return getType();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value7() {
		return getSuccess();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value8() {
		return getFailed();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value9() {
		return getCron();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TasksRecord value1(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TasksRecord value2(String value) {
		setName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TasksRecord value3(Timestamp value) {
		setCreatedOn(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TasksRecord value4(String value) {
		setImage(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TasksRecord value5(String value) {
		setCommand(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TasksRecord value6(Integer value) {
		setType(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TasksRecord value7(Integer value) {
		setSuccess(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TasksRecord value8(Integer value) {
		setFailed(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TasksRecord value9(String value) {
		setCron(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TasksRecord values(Integer value1, String value2, Timestamp value3, String value4, String value5, Integer value6, Integer value7, Integer value8, String value9) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		value8(value8);
		value9(value9);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached TasksRecord
	 */
	public TasksRecord() {
		super(Tasks.TASKS);
	}

	/**
	 * Create a detached, initialised TasksRecord
	 */
	public TasksRecord(Integer id, String name, Timestamp createdOn, String image, String command, Integer type, Integer success, Integer failed, String cron) {
		super(Tasks.TASKS);

		setValue(0, id);
		setValue(1, name);
		setValue(2, createdOn);
		setValue(3, image);
		setValue(4, command);
		setValue(5, type);
		setValue(6, success);
		setValue(7, failed);
		setValue(8, cron);
	}
}
