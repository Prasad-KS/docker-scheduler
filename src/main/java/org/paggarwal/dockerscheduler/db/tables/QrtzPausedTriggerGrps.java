/**
 * This class is generated by jOOQ
 */
package org.paggarwal.dockerscheduler.db.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.paggarwal.dockerscheduler.db.Dockerscheduler;
import org.paggarwal.dockerscheduler.db.Keys;
import org.paggarwal.dockerscheduler.db.tables.records.QrtzPausedTriggerGrpsRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QrtzPausedTriggerGrps extends TableImpl<QrtzPausedTriggerGrpsRecord> {

	private static final long serialVersionUID = 1703020927;

	/**
	 * The reference instance of <code>dockerscheduler.QRTZ_PAUSED_TRIGGER_GRPS</code>
	 */
	public static final QrtzPausedTriggerGrps QRTZ_PAUSED_TRIGGER_GRPS = new QrtzPausedTriggerGrps();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<QrtzPausedTriggerGrpsRecord> getRecordType() {
		return QrtzPausedTriggerGrpsRecord.class;
	}

	/**
	 * The column <code>dockerscheduler.QRTZ_PAUSED_TRIGGER_GRPS.SCHED_NAME</code>.
	 */
	public final TableField<QrtzPausedTriggerGrpsRecord, String> SCHED_NAME = createField("SCHED_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "");

	/**
	 * The column <code>dockerscheduler.QRTZ_PAUSED_TRIGGER_GRPS.TRIGGER_GROUP</code>.
	 */
	public final TableField<QrtzPausedTriggerGrpsRecord, String> TRIGGER_GROUP = createField("TRIGGER_GROUP", org.jooq.impl.SQLDataType.VARCHAR.length(200).nullable(false), this, "");

	/**
	 * Create a <code>dockerscheduler.QRTZ_PAUSED_TRIGGER_GRPS</code> table reference
	 */
	public QrtzPausedTriggerGrps() {
		this("QRTZ_PAUSED_TRIGGER_GRPS", null);
	}

	/**
	 * Create an aliased <code>dockerscheduler.QRTZ_PAUSED_TRIGGER_GRPS</code> table reference
	 */
	public QrtzPausedTriggerGrps(String alias) {
		this(alias, QRTZ_PAUSED_TRIGGER_GRPS);
	}

	private QrtzPausedTriggerGrps(String alias, Table<QrtzPausedTriggerGrpsRecord> aliased) {
		this(alias, aliased, null);
	}

	private QrtzPausedTriggerGrps(String alias, Table<QrtzPausedTriggerGrpsRecord> aliased, Field<?>[] parameters) {
		super(alias, Dockerscheduler.DOCKERSCHEDULER, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<QrtzPausedTriggerGrpsRecord> getPrimaryKey() {
		return Keys.KEY_QRTZ_PAUSED_TRIGGER_GRPS_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<QrtzPausedTriggerGrpsRecord>> getKeys() {
		return Arrays.<UniqueKey<QrtzPausedTriggerGrpsRecord>>asList(Keys.KEY_QRTZ_PAUSED_TRIGGER_GRPS_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public QrtzPausedTriggerGrps as(String alias) {
		return new QrtzPausedTriggerGrps(alias, this);
	}

	/**
	 * Rename this table
	 */
	public QrtzPausedTriggerGrps rename(String name) {
		return new QrtzPausedTriggerGrps(name, null);
	}
}
