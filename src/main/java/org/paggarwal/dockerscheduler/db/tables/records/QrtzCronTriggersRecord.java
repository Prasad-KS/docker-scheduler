/**
 * This class is generated by jOOQ
 */
package org.paggarwal.dockerscheduler.db.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;
import org.paggarwal.dockerscheduler.db.tables.QrtzCronTriggers;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QrtzCronTriggersRecord extends UpdatableRecordImpl<QrtzCronTriggersRecord> implements Record5<String, String, String, String, String> {

	private static final long serialVersionUID = 1855195099;

	/**
	 * Setter for <code>dockerscheduler.QRTZ_CRON_TRIGGERS.SCHED_NAME</code>.
	 */
	public void setSchedName(String value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>dockerscheduler.QRTZ_CRON_TRIGGERS.SCHED_NAME</code>.
	 */
	public String getSchedName() {
		return (String) getValue(0);
	}

	/**
	 * Setter for <code>dockerscheduler.QRTZ_CRON_TRIGGERS.TRIGGER_NAME</code>.
	 */
	public void setTriggerName(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>dockerscheduler.QRTZ_CRON_TRIGGERS.TRIGGER_NAME</code>.
	 */
	public String getTriggerName() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>dockerscheduler.QRTZ_CRON_TRIGGERS.TRIGGER_GROUP</code>.
	 */
	public void setTriggerGroup(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>dockerscheduler.QRTZ_CRON_TRIGGERS.TRIGGER_GROUP</code>.
	 */
	public String getTriggerGroup() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>dockerscheduler.QRTZ_CRON_TRIGGERS.CRON_EXPRESSION</code>.
	 */
	public void setCronExpression(String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>dockerscheduler.QRTZ_CRON_TRIGGERS.CRON_EXPRESSION</code>.
	 */
	public String getCronExpression() {
		return (String) getValue(3);
	}

	/**
	 * Setter for <code>dockerscheduler.QRTZ_CRON_TRIGGERS.TIME_ZONE_ID</code>.
	 */
	public void setTimeZoneId(String value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>dockerscheduler.QRTZ_CRON_TRIGGERS.TIME_ZONE_ID</code>.
	 */
	public String getTimeZoneId() {
		return (String) getValue(4);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record3<String, String, String> key() {
		return (Record3) super.key();
	}

	// -------------------------------------------------------------------------
	// Record5 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row5<String, String, String, String, String> fieldsRow() {
		return (Row5) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row5<String, String, String, String, String> valuesRow() {
		return (Row5) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field1() {
		return QrtzCronTriggers.QRTZ_CRON_TRIGGERS.SCHED_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return QrtzCronTriggers.QRTZ_CRON_TRIGGERS.TRIGGER_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return QrtzCronTriggers.QRTZ_CRON_TRIGGERS.TRIGGER_GROUP;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return QrtzCronTriggers.QRTZ_CRON_TRIGGERS.CRON_EXPRESSION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field5() {
		return QrtzCronTriggers.QRTZ_CRON_TRIGGERS.TIME_ZONE_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value1() {
		return getSchedName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getTriggerName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getTriggerGroup();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getCronExpression();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value5() {
		return getTimeZoneId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public QrtzCronTriggersRecord value1(String value) {
		setSchedName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public QrtzCronTriggersRecord value2(String value) {
		setTriggerName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public QrtzCronTriggersRecord value3(String value) {
		setTriggerGroup(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public QrtzCronTriggersRecord value4(String value) {
		setCronExpression(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public QrtzCronTriggersRecord value5(String value) {
		setTimeZoneId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public QrtzCronTriggersRecord values(String value1, String value2, String value3, String value4, String value5) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached QrtzCronTriggersRecord
	 */
	public QrtzCronTriggersRecord() {
		super(QrtzCronTriggers.QRTZ_CRON_TRIGGERS);
	}

	/**
	 * Create a detached, initialised QrtzCronTriggersRecord
	 */
	public QrtzCronTriggersRecord(String schedName, String triggerName, String triggerGroup, String cronExpression, String timeZoneId) {
		super(QrtzCronTriggers.QRTZ_CRON_TRIGGERS);

		setValue(0, schedName);
		setValue(1, triggerName);
		setValue(2, triggerGroup);
		setValue(3, cronExpression);
		setValue(4, timeZoneId);
	}
}
