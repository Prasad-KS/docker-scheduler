/**
 * This class is generated by jOOQ
 */
package org.paggarwal.dockerscheduler.db.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.paggarwal.dockerscheduler.db.Dockerscheduler;
import org.paggarwal.dockerscheduler.db.Keys;
import org.paggarwal.dockerscheduler.db.tables.records.EnvironmentVariablesRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EnvironmentVariables extends TableImpl<EnvironmentVariablesRecord> {

	private static final long serialVersionUID = 841835871;

	/**
	 * The reference instance of <code>dockerscheduler.ENVIRONMENT_VARIABLES</code>
	 */
	public static final EnvironmentVariables ENVIRONMENT_VARIABLES = new EnvironmentVariables();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<EnvironmentVariablesRecord> getRecordType() {
		return EnvironmentVariablesRecord.class;
	}

	/**
	 * The column <code>dockerscheduler.ENVIRONMENT_VARIABLES.id</code>.
	 */
	public final TableField<EnvironmentVariablesRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>dockerscheduler.ENVIRONMENT_VARIABLES.name</code>.
	 */
	public final TableField<EnvironmentVariablesRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(128).nullable(false), this, "");

	/**
	 * The column <code>dockerscheduler.ENVIRONMENT_VARIABLES.value</code>.
	 */
	public final TableField<EnvironmentVariablesRecord, String> VALUE = createField("value", org.jooq.impl.SQLDataType.VARCHAR.length(1024).nullable(false), this, "");

	/**
	 * Create a <code>dockerscheduler.ENVIRONMENT_VARIABLES</code> table reference
	 */
	public EnvironmentVariables() {
		this("ENVIRONMENT_VARIABLES", null);
	}

	/**
	 * Create an aliased <code>dockerscheduler.ENVIRONMENT_VARIABLES</code> table reference
	 */
	public EnvironmentVariables(String alias) {
		this(alias, ENVIRONMENT_VARIABLES);
	}

	private EnvironmentVariables(String alias, Table<EnvironmentVariablesRecord> aliased) {
		this(alias, aliased, null);
	}

	private EnvironmentVariables(String alias, Table<EnvironmentVariablesRecord> aliased, Field<?>[] parameters) {
		super(alias, Dockerscheduler.DOCKERSCHEDULER, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<EnvironmentVariablesRecord, Integer> getIdentity() {
		return Keys.IDENTITY_ENVIRONMENT_VARIABLES;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<EnvironmentVariablesRecord> getPrimaryKey() {
		return Keys.KEY_ENVIRONMENT_VARIABLES_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<EnvironmentVariablesRecord>> getKeys() {
		return Arrays.<UniqueKey<EnvironmentVariablesRecord>>asList(Keys.KEY_ENVIRONMENT_VARIABLES_PRIMARY, Keys.KEY_ENVIRONMENT_VARIABLES_U_ENVIRONMENT_VARIABLE_NAME);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EnvironmentVariables as(String alias) {
		return new EnvironmentVariables(alias, this);
	}

	/**
	 * Rename this table
	 */
	public EnvironmentVariables rename(String name) {
		return new EnvironmentVariables(name, null);
	}
}
