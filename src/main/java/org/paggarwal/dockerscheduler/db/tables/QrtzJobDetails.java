/**
 * This class is generated by jOOQ
 */
package org.paggarwal.dockerscheduler.db.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.paggarwal.dockerscheduler.db.Dockerscheduler;
import org.paggarwal.dockerscheduler.db.Keys;
import org.paggarwal.dockerscheduler.db.tables.records.QrtzJobDetailsRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QrtzJobDetails extends TableImpl<QrtzJobDetailsRecord> {

	private static final long serialVersionUID = 774486109;

	/**
	 * The reference instance of <code>dockerscheduler.QRTZ_JOB_DETAILS</code>
	 */
	public static final QrtzJobDetails QRTZ_JOB_DETAILS = new QrtzJobDetails();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<QrtzJobDetailsRecord> getRecordType() {
		return QrtzJobDetailsRecord.class;
	}

	/**
	 * The column <code>dockerscheduler.QRTZ_JOB_DETAILS.SCHED_NAME</code>.
	 */
	public final TableField<QrtzJobDetailsRecord, String> SCHED_NAME = createField("SCHED_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "");

	/**
	 * The column <code>dockerscheduler.QRTZ_JOB_DETAILS.JOB_NAME</code>.
	 */
	public final TableField<QrtzJobDetailsRecord, String> JOB_NAME = createField("JOB_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(150).nullable(false), this, "");

	/**
	 * The column <code>dockerscheduler.QRTZ_JOB_DETAILS.JOB_GROUP</code>.
	 */
	public final TableField<QrtzJobDetailsRecord, String> JOB_GROUP = createField("JOB_GROUP", org.jooq.impl.SQLDataType.VARCHAR.length(150).nullable(false), this, "");

	/**
	 * The column <code>dockerscheduler.QRTZ_JOB_DETAILS.DESCRIPTION</code>.
	 */
	public final TableField<QrtzJobDetailsRecord, String> DESCRIPTION = createField("DESCRIPTION", org.jooq.impl.SQLDataType.VARCHAR.length(250), this, "");

	/**
	 * The column <code>dockerscheduler.QRTZ_JOB_DETAILS.JOB_CLASS_NAME</code>.
	 */
	public final TableField<QrtzJobDetailsRecord, String> JOB_CLASS_NAME = createField("JOB_CLASS_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(250).nullable(false), this, "");

	/**
	 * The column <code>dockerscheduler.QRTZ_JOB_DETAILS.IS_DURABLE</code>.
	 */
	public final TableField<QrtzJobDetailsRecord, Boolean> IS_DURABLE = createField("IS_DURABLE", org.jooq.impl.SQLDataType.BIT.nullable(false), this, "");

	/**
	 * The column <code>dockerscheduler.QRTZ_JOB_DETAILS.IS_NONCONCURRENT</code>.
	 */
	public final TableField<QrtzJobDetailsRecord, Boolean> IS_NONCONCURRENT = createField("IS_NONCONCURRENT", org.jooq.impl.SQLDataType.BIT.nullable(false), this, "");

	/**
	 * The column <code>dockerscheduler.QRTZ_JOB_DETAILS.IS_UPDATE_DATA</code>.
	 */
	public final TableField<QrtzJobDetailsRecord, Boolean> IS_UPDATE_DATA = createField("IS_UPDATE_DATA", org.jooq.impl.SQLDataType.BIT.nullable(false), this, "");

	/**
	 * The column <code>dockerscheduler.QRTZ_JOB_DETAILS.REQUESTS_RECOVERY</code>.
	 */
	public final TableField<QrtzJobDetailsRecord, Boolean> REQUESTS_RECOVERY = createField("REQUESTS_RECOVERY", org.jooq.impl.SQLDataType.BIT.nullable(false), this, "");

	/**
	 * The column <code>dockerscheduler.QRTZ_JOB_DETAILS.JOB_DATA</code>.
	 */
	public final TableField<QrtzJobDetailsRecord, byte[]> JOB_DATA = createField("JOB_DATA", org.jooq.impl.SQLDataType.BLOB, this, "");

	/**
	 * Create a <code>dockerscheduler.QRTZ_JOB_DETAILS</code> table reference
	 */
	public QrtzJobDetails() {
		this("QRTZ_JOB_DETAILS", null);
	}

	/**
	 * Create an aliased <code>dockerscheduler.QRTZ_JOB_DETAILS</code> table reference
	 */
	public QrtzJobDetails(String alias) {
		this(alias, QRTZ_JOB_DETAILS);
	}

	private QrtzJobDetails(String alias, Table<QrtzJobDetailsRecord> aliased) {
		this(alias, aliased, null);
	}

	private QrtzJobDetails(String alias, Table<QrtzJobDetailsRecord> aliased, Field<?>[] parameters) {
		super(alias, Dockerscheduler.DOCKERSCHEDULER, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<QrtzJobDetailsRecord> getPrimaryKey() {
		return Keys.KEY_QRTZ_JOB_DETAILS_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<QrtzJobDetailsRecord>> getKeys() {
		return Arrays.<UniqueKey<QrtzJobDetailsRecord>>asList(Keys.KEY_QRTZ_JOB_DETAILS_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public QrtzJobDetails as(String alias) {
		return new QrtzJobDetails(alias, this);
	}

	/**
	 * Rename this table
	 */
	public QrtzJobDetails rename(String name) {
		return new QrtzJobDetails(name, null);
	}
}
