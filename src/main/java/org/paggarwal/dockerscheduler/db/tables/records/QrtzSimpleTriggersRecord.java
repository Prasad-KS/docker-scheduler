/**
 * This class is generated by jOOQ
 */
package org.paggarwal.dockerscheduler.db.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;
import org.paggarwal.dockerscheduler.db.tables.QrtzSimpleTriggers;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QrtzSimpleTriggersRecord extends UpdatableRecordImpl<QrtzSimpleTriggersRecord> implements Record6<String, String, String, Long, Long, Long> {

	private static final long serialVersionUID = -1998461016;

	/**
	 * Setter for <code>dockerscheduler.QRTZ_SIMPLE_TRIGGERS.SCHED_NAME</code>.
	 */
	public void setSchedName(String value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>dockerscheduler.QRTZ_SIMPLE_TRIGGERS.SCHED_NAME</code>.
	 */
	public String getSchedName() {
		return (String) getValue(0);
	}

	/**
	 * Setter for <code>dockerscheduler.QRTZ_SIMPLE_TRIGGERS.TRIGGER_NAME</code>.
	 */
	public void setTriggerName(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>dockerscheduler.QRTZ_SIMPLE_TRIGGERS.TRIGGER_NAME</code>.
	 */
	public String getTriggerName() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>dockerscheduler.QRTZ_SIMPLE_TRIGGERS.TRIGGER_GROUP</code>.
	 */
	public void setTriggerGroup(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>dockerscheduler.QRTZ_SIMPLE_TRIGGERS.TRIGGER_GROUP</code>.
	 */
	public String getTriggerGroup() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>dockerscheduler.QRTZ_SIMPLE_TRIGGERS.REPEAT_COUNT</code>.
	 */
	public void setRepeatCount(Long value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>dockerscheduler.QRTZ_SIMPLE_TRIGGERS.REPEAT_COUNT</code>.
	 */
	public Long getRepeatCount() {
		return (Long) getValue(3);
	}

	/**
	 * Setter for <code>dockerscheduler.QRTZ_SIMPLE_TRIGGERS.REPEAT_INTERVAL</code>.
	 */
	public void setRepeatInterval(Long value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>dockerscheduler.QRTZ_SIMPLE_TRIGGERS.REPEAT_INTERVAL</code>.
	 */
	public Long getRepeatInterval() {
		return (Long) getValue(4);
	}

	/**
	 * Setter for <code>dockerscheduler.QRTZ_SIMPLE_TRIGGERS.TIMES_TRIGGERED</code>.
	 */
	public void setTimesTriggered(Long value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>dockerscheduler.QRTZ_SIMPLE_TRIGGERS.TIMES_TRIGGERED</code>.
	 */
	public Long getTimesTriggered() {
		return (Long) getValue(5);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<String> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record6 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row6<String, String, String, Long, Long, Long> fieldsRow() {
		return (Row6) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row6<String, String, String, Long, Long, Long> valuesRow() {
		return (Row6) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field1() {
		return QrtzSimpleTriggers.QRTZ_SIMPLE_TRIGGERS.SCHED_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return QrtzSimpleTriggers.QRTZ_SIMPLE_TRIGGERS.TRIGGER_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return QrtzSimpleTriggers.QRTZ_SIMPLE_TRIGGERS.TRIGGER_GROUP;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field4() {
		return QrtzSimpleTriggers.QRTZ_SIMPLE_TRIGGERS.REPEAT_COUNT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field5() {
		return QrtzSimpleTriggers.QRTZ_SIMPLE_TRIGGERS.REPEAT_INTERVAL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field6() {
		return QrtzSimpleTriggers.QRTZ_SIMPLE_TRIGGERS.TIMES_TRIGGERED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value1() {
		return getSchedName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getTriggerName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getTriggerGroup();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value4() {
		return getRepeatCount();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value5() {
		return getRepeatInterval();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value6() {
		return getTimesTriggered();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public QrtzSimpleTriggersRecord value1(String value) {
		setSchedName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public QrtzSimpleTriggersRecord value2(String value) {
		setTriggerName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public QrtzSimpleTriggersRecord value3(String value) {
		setTriggerGroup(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public QrtzSimpleTriggersRecord value4(Long value) {
		setRepeatCount(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public QrtzSimpleTriggersRecord value5(Long value) {
		setRepeatInterval(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public QrtzSimpleTriggersRecord value6(Long value) {
		setTimesTriggered(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public QrtzSimpleTriggersRecord values(String value1, String value2, String value3, Long value4, Long value5, Long value6) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached QrtzSimpleTriggersRecord
	 */
	public QrtzSimpleTriggersRecord() {
		super(QrtzSimpleTriggers.QRTZ_SIMPLE_TRIGGERS);
	}

	/**
	 * Create a detached, initialised QrtzSimpleTriggersRecord
	 */
	public QrtzSimpleTriggersRecord(String schedName, String triggerName, String triggerGroup, Long repeatCount, Long repeatInterval, Long timesTriggered) {
		super(QrtzSimpleTriggers.QRTZ_SIMPLE_TRIGGERS);

		setValue(0, schedName);
		setValue(1, triggerName);
		setValue(2, triggerGroup);
		setValue(3, repeatCount);
		setValue(4, repeatInterval);
		setValue(5, timesTriggered);
	}
}
