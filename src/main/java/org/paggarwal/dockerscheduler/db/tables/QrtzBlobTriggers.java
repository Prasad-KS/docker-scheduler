/**
 * This class is generated by jOOQ
 */
package org.paggarwal.dockerscheduler.db.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.paggarwal.dockerscheduler.db.Dockerscheduler;
import org.paggarwal.dockerscheduler.db.Keys;
import org.paggarwal.dockerscheduler.db.tables.records.QrtzBlobTriggersRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QrtzBlobTriggers extends TableImpl<QrtzBlobTriggersRecord> {

	private static final long serialVersionUID = 711974188;

	/**
	 * The reference instance of <code>dockerscheduler.QRTZ_BLOB_TRIGGERS</code>
	 */
	public static final QrtzBlobTriggers QRTZ_BLOB_TRIGGERS = new QrtzBlobTriggers();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<QrtzBlobTriggersRecord> getRecordType() {
		return QrtzBlobTriggersRecord.class;
	}

	/**
	 * The column <code>dockerscheduler.QRTZ_BLOB_TRIGGERS.SCHED_NAME</code>.
	 */
	public final TableField<QrtzBlobTriggersRecord, String> SCHED_NAME = createField("SCHED_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "");

	/**
	 * The column <code>dockerscheduler.QRTZ_BLOB_TRIGGERS.TRIGGER_NAME</code>.
	 */
	public final TableField<QrtzBlobTriggersRecord, String> TRIGGER_NAME = createField("TRIGGER_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(150).nullable(false), this, "");

	/**
	 * The column <code>dockerscheduler.QRTZ_BLOB_TRIGGERS.TRIGGER_GROUP</code>.
	 */
	public final TableField<QrtzBlobTriggersRecord, String> TRIGGER_GROUP = createField("TRIGGER_GROUP", org.jooq.impl.SQLDataType.VARCHAR.length(150).nullable(false), this, "");

	/**
	 * The column <code>dockerscheduler.QRTZ_BLOB_TRIGGERS.JOB_DATA</code>.
	 */
	public final TableField<QrtzBlobTriggersRecord, byte[]> JOB_DATA = createField("JOB_DATA", org.jooq.impl.SQLDataType.BLOB, this, "");

	/**
	 * Create a <code>dockerscheduler.QRTZ_BLOB_TRIGGERS</code> table reference
	 */
	public QrtzBlobTriggers() {
		this("QRTZ_BLOB_TRIGGERS", null);
	}

	/**
	 * Create an aliased <code>dockerscheduler.QRTZ_BLOB_TRIGGERS</code> table reference
	 */
	public QrtzBlobTriggers(String alias) {
		this(alias, QRTZ_BLOB_TRIGGERS);
	}

	private QrtzBlobTriggers(String alias, Table<QrtzBlobTriggersRecord> aliased) {
		this(alias, aliased, null);
	}

	private QrtzBlobTriggers(String alias, Table<QrtzBlobTriggersRecord> aliased, Field<?>[] parameters) {
		super(alias, Dockerscheduler.DOCKERSCHEDULER, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<QrtzBlobTriggersRecord> getPrimaryKey() {
		return Keys.KEY_QRTZ_BLOB_TRIGGERS_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<QrtzBlobTriggersRecord>> getKeys() {
		return Arrays.<UniqueKey<QrtzBlobTriggersRecord>>asList(Keys.KEY_QRTZ_BLOB_TRIGGERS_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public QrtzBlobTriggers as(String alias) {
		return new QrtzBlobTriggers(alias, this);
	}

	/**
	 * Rename this table
	 */
	public QrtzBlobTriggers rename(String name) {
		return new QrtzBlobTriggers(name, null);
	}
}
