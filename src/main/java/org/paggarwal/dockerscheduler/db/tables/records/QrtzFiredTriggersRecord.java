/**
 * This class is generated by jOOQ
 */
package org.paggarwal.dockerscheduler.db.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record13;
import org.jooq.Record2;
import org.jooq.Row13;
import org.jooq.impl.UpdatableRecordImpl;
import org.paggarwal.dockerscheduler.db.tables.QrtzFiredTriggers;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QrtzFiredTriggersRecord extends UpdatableRecordImpl<QrtzFiredTriggersRecord> implements Record13<String, String, String, String, String, Long, Long, Integer, String, String, String, Boolean, Boolean> {

	private static final long serialVersionUID = -1966769456;

	/**
	 * Setter for <code>dockerscheduler.QRTZ_FIRED_TRIGGERS.SCHED_NAME</code>.
	 */
	public void setSchedName(String value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>dockerscheduler.QRTZ_FIRED_TRIGGERS.SCHED_NAME</code>.
	 */
	public String getSchedName() {
		return (String) getValue(0);
	}

	/**
	 * Setter for <code>dockerscheduler.QRTZ_FIRED_TRIGGERS.ENTRY_ID</code>.
	 */
	public void setEntryId(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>dockerscheduler.QRTZ_FIRED_TRIGGERS.ENTRY_ID</code>.
	 */
	public String getEntryId() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>dockerscheduler.QRTZ_FIRED_TRIGGERS.TRIGGER_NAME</code>.
	 */
	public void setTriggerName(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>dockerscheduler.QRTZ_FIRED_TRIGGERS.TRIGGER_NAME</code>.
	 */
	public String getTriggerName() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>dockerscheduler.QRTZ_FIRED_TRIGGERS.TRIGGER_GROUP</code>.
	 */
	public void setTriggerGroup(String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>dockerscheduler.QRTZ_FIRED_TRIGGERS.TRIGGER_GROUP</code>.
	 */
	public String getTriggerGroup() {
		return (String) getValue(3);
	}

	/**
	 * Setter for <code>dockerscheduler.QRTZ_FIRED_TRIGGERS.INSTANCE_NAME</code>.
	 */
	public void setInstanceName(String value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>dockerscheduler.QRTZ_FIRED_TRIGGERS.INSTANCE_NAME</code>.
	 */
	public String getInstanceName() {
		return (String) getValue(4);
	}

	/**
	 * Setter for <code>dockerscheduler.QRTZ_FIRED_TRIGGERS.FIRED_TIME</code>.
	 */
	public void setFiredTime(Long value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>dockerscheduler.QRTZ_FIRED_TRIGGERS.FIRED_TIME</code>.
	 */
	public Long getFiredTime() {
		return (Long) getValue(5);
	}

	/**
	 * Setter for <code>dockerscheduler.QRTZ_FIRED_TRIGGERS.SCHED_TIME</code>.
	 */
	public void setSchedTime(Long value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>dockerscheduler.QRTZ_FIRED_TRIGGERS.SCHED_TIME</code>.
	 */
	public Long getSchedTime() {
		return (Long) getValue(6);
	}

	/**
	 * Setter for <code>dockerscheduler.QRTZ_FIRED_TRIGGERS.PRIORITY</code>.
	 */
	public void setPriority(Integer value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>dockerscheduler.QRTZ_FIRED_TRIGGERS.PRIORITY</code>.
	 */
	public Integer getPriority() {
		return (Integer) getValue(7);
	}

	/**
	 * Setter for <code>dockerscheduler.QRTZ_FIRED_TRIGGERS.STATE</code>.
	 */
	public void setState(String value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>dockerscheduler.QRTZ_FIRED_TRIGGERS.STATE</code>.
	 */
	public String getState() {
		return (String) getValue(8);
	}

	/**
	 * Setter for <code>dockerscheduler.QRTZ_FIRED_TRIGGERS.JOB_NAME</code>.
	 */
	public void setJobName(String value) {
		setValue(9, value);
	}

	/**
	 * Getter for <code>dockerscheduler.QRTZ_FIRED_TRIGGERS.JOB_NAME</code>.
	 */
	public String getJobName() {
		return (String) getValue(9);
	}

	/**
	 * Setter for <code>dockerscheduler.QRTZ_FIRED_TRIGGERS.JOB_GROUP</code>.
	 */
	public void setJobGroup(String value) {
		setValue(10, value);
	}

	/**
	 * Getter for <code>dockerscheduler.QRTZ_FIRED_TRIGGERS.JOB_GROUP</code>.
	 */
	public String getJobGroup() {
		return (String) getValue(10);
	}

	/**
	 * Setter for <code>dockerscheduler.QRTZ_FIRED_TRIGGERS.IS_NONCONCURRENT</code>.
	 */
	public void setIsNonconcurrent(Boolean value) {
		setValue(11, value);
	}

	/**
	 * Getter for <code>dockerscheduler.QRTZ_FIRED_TRIGGERS.IS_NONCONCURRENT</code>.
	 */
	public Boolean getIsNonconcurrent() {
		return (Boolean) getValue(11);
	}

	/**
	 * Setter for <code>dockerscheduler.QRTZ_FIRED_TRIGGERS.REQUESTS_RECOVERY</code>.
	 */
	public void setRequestsRecovery(Boolean value) {
		setValue(12, value);
	}

	/**
	 * Getter for <code>dockerscheduler.QRTZ_FIRED_TRIGGERS.REQUESTS_RECOVERY</code>.
	 */
	public Boolean getRequestsRecovery() {
		return (Boolean) getValue(12);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record2<String, String> key() {
		return (Record2) super.key();
	}

	// -------------------------------------------------------------------------
	// Record13 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row13<String, String, String, String, String, Long, Long, Integer, String, String, String, Boolean, Boolean> fieldsRow() {
		return (Row13) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row13<String, String, String, String, String, Long, Long, Integer, String, String, String, Boolean, Boolean> valuesRow() {
		return (Row13) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field1() {
		return QrtzFiredTriggers.QRTZ_FIRED_TRIGGERS.SCHED_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return QrtzFiredTriggers.QRTZ_FIRED_TRIGGERS.ENTRY_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return QrtzFiredTriggers.QRTZ_FIRED_TRIGGERS.TRIGGER_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return QrtzFiredTriggers.QRTZ_FIRED_TRIGGERS.TRIGGER_GROUP;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field5() {
		return QrtzFiredTriggers.QRTZ_FIRED_TRIGGERS.INSTANCE_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field6() {
		return QrtzFiredTriggers.QRTZ_FIRED_TRIGGERS.FIRED_TIME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field7() {
		return QrtzFiredTriggers.QRTZ_FIRED_TRIGGERS.SCHED_TIME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field8() {
		return QrtzFiredTriggers.QRTZ_FIRED_TRIGGERS.PRIORITY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field9() {
		return QrtzFiredTriggers.QRTZ_FIRED_TRIGGERS.STATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field10() {
		return QrtzFiredTriggers.QRTZ_FIRED_TRIGGERS.JOB_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field11() {
		return QrtzFiredTriggers.QRTZ_FIRED_TRIGGERS.JOB_GROUP;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Boolean> field12() {
		return QrtzFiredTriggers.QRTZ_FIRED_TRIGGERS.IS_NONCONCURRENT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Boolean> field13() {
		return QrtzFiredTriggers.QRTZ_FIRED_TRIGGERS.REQUESTS_RECOVERY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value1() {
		return getSchedName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getEntryId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getTriggerName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getTriggerGroup();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value5() {
		return getInstanceName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value6() {
		return getFiredTime();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value7() {
		return getSchedTime();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value8() {
		return getPriority();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value9() {
		return getState();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value10() {
		return getJobName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value11() {
		return getJobGroup();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Boolean value12() {
		return getIsNonconcurrent();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Boolean value13() {
		return getRequestsRecovery();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public QrtzFiredTriggersRecord value1(String value) {
		setSchedName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public QrtzFiredTriggersRecord value2(String value) {
		setEntryId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public QrtzFiredTriggersRecord value3(String value) {
		setTriggerName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public QrtzFiredTriggersRecord value4(String value) {
		setTriggerGroup(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public QrtzFiredTriggersRecord value5(String value) {
		setInstanceName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public QrtzFiredTriggersRecord value6(Long value) {
		setFiredTime(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public QrtzFiredTriggersRecord value7(Long value) {
		setSchedTime(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public QrtzFiredTriggersRecord value8(Integer value) {
		setPriority(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public QrtzFiredTriggersRecord value9(String value) {
		setState(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public QrtzFiredTriggersRecord value10(String value) {
		setJobName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public QrtzFiredTriggersRecord value11(String value) {
		setJobGroup(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public QrtzFiredTriggersRecord value12(Boolean value) {
		setIsNonconcurrent(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public QrtzFiredTriggersRecord value13(Boolean value) {
		setRequestsRecovery(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public QrtzFiredTriggersRecord values(String value1, String value2, String value3, String value4, String value5, Long value6, Long value7, Integer value8, String value9, String value10, String value11, Boolean value12, Boolean value13) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		value8(value8);
		value9(value9);
		value10(value10);
		value11(value11);
		value12(value12);
		value13(value13);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached QrtzFiredTriggersRecord
	 */
	public QrtzFiredTriggersRecord() {
		super(QrtzFiredTriggers.QRTZ_FIRED_TRIGGERS);
	}

	/**
	 * Create a detached, initialised QrtzFiredTriggersRecord
	 */
	public QrtzFiredTriggersRecord(String schedName, String entryId, String triggerName, String triggerGroup, String instanceName, Long firedTime, Long schedTime, Integer priority, String state, String jobName, String jobGroup, Boolean isNonconcurrent, Boolean requestsRecovery) {
		super(QrtzFiredTriggers.QRTZ_FIRED_TRIGGERS);

		setValue(0, schedName);
		setValue(1, entryId);
		setValue(2, triggerName);
		setValue(3, triggerGroup);
		setValue(4, instanceName);
		setValue(5, firedTime);
		setValue(6, schedTime);
		setValue(7, priority);
		setValue(8, state);
		setValue(9, jobName);
		setValue(10, jobGroup);
		setValue(11, isNonconcurrent);
		setValue(12, requestsRecovery);
	}
}
