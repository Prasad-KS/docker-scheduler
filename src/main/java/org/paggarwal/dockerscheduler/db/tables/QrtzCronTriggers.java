/**
 * This class is generated by jOOQ
 */
package org.paggarwal.dockerscheduler.db.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.paggarwal.dockerscheduler.db.Dockerscheduler;
import org.paggarwal.dockerscheduler.db.Keys;
import org.paggarwal.dockerscheduler.db.tables.records.QrtzCronTriggersRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QrtzCronTriggers extends TableImpl<QrtzCronTriggersRecord> {

	private static final long serialVersionUID = -1828748954;

	/**
	 * The reference instance of <code>dockerscheduler.QRTZ_CRON_TRIGGERS</code>
	 */
	public static final QrtzCronTriggers QRTZ_CRON_TRIGGERS = new QrtzCronTriggers();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<QrtzCronTriggersRecord> getRecordType() {
		return QrtzCronTriggersRecord.class;
	}

	/**
	 * The column <code>dockerscheduler.QRTZ_CRON_TRIGGERS.SCHED_NAME</code>.
	 */
	public final TableField<QrtzCronTriggersRecord, String> SCHED_NAME = createField("SCHED_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "");

	/**
	 * The column <code>dockerscheduler.QRTZ_CRON_TRIGGERS.TRIGGER_NAME</code>.
	 */
	public final TableField<QrtzCronTriggersRecord, String> TRIGGER_NAME = createField("TRIGGER_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(150).nullable(false), this, "");

	/**
	 * The column <code>dockerscheduler.QRTZ_CRON_TRIGGERS.TRIGGER_GROUP</code>.
	 */
	public final TableField<QrtzCronTriggersRecord, String> TRIGGER_GROUP = createField("TRIGGER_GROUP", org.jooq.impl.SQLDataType.VARCHAR.length(150).nullable(false), this, "");

	/**
	 * The column <code>dockerscheduler.QRTZ_CRON_TRIGGERS.CRON_EXPRESSION</code>.
	 */
	public final TableField<QrtzCronTriggersRecord, String> CRON_EXPRESSION = createField("CRON_EXPRESSION", org.jooq.impl.SQLDataType.VARCHAR.length(120).nullable(false), this, "");

	/**
	 * The column <code>dockerscheduler.QRTZ_CRON_TRIGGERS.TIME_ZONE_ID</code>.
	 */
	public final TableField<QrtzCronTriggersRecord, String> TIME_ZONE_ID = createField("TIME_ZONE_ID", org.jooq.impl.SQLDataType.VARCHAR.length(80), this, "");

	/**
	 * Create a <code>dockerscheduler.QRTZ_CRON_TRIGGERS</code> table reference
	 */
	public QrtzCronTriggers() {
		this("QRTZ_CRON_TRIGGERS", null);
	}

	/**
	 * Create an aliased <code>dockerscheduler.QRTZ_CRON_TRIGGERS</code> table reference
	 */
	public QrtzCronTriggers(String alias) {
		this(alias, QRTZ_CRON_TRIGGERS);
	}

	private QrtzCronTriggers(String alias, Table<QrtzCronTriggersRecord> aliased) {
		this(alias, aliased, null);
	}

	private QrtzCronTriggers(String alias, Table<QrtzCronTriggersRecord> aliased, Field<?>[] parameters) {
		super(alias, Dockerscheduler.DOCKERSCHEDULER, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<QrtzCronTriggersRecord> getPrimaryKey() {
		return Keys.KEY_QRTZ_CRON_TRIGGERS_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<QrtzCronTriggersRecord>> getKeys() {
		return Arrays.<UniqueKey<QrtzCronTriggersRecord>>asList(Keys.KEY_QRTZ_CRON_TRIGGERS_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<QrtzCronTriggersRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<QrtzCronTriggersRecord, ?>>asList(Keys.FK_QRTZ_CRON_TRIGGERS_QRTZ_TRIGGERS);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public QrtzCronTriggers as(String alias) {
		return new QrtzCronTriggers(alias, this);
	}

	/**
	 * Rename this table
	 */
	public QrtzCronTriggers rename(String name) {
		return new QrtzCronTriggers(name, null);
	}
}
